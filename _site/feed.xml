<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2025-08-06T08:00:46+08:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">4Scrummaster.ai</title><subtitle>這個網站是為了提供 Scrum Master 在培訓 AI 在 Scrum 的應用而生，主要維護者是 Annie、Ethan、Yuming。 This website was created to support Scrum Masters in training AI for applications in Scrum. The primary maintainers are Annie, Ethan, and Yuming..</subtitle><entry><title type="html">Logistics</title><link href="http://0.0.0.0:4000/default/2025/08/04/Logistics.html" rel="alternate" type="text/html" title="Logistics" /><published>2025-08-04T00:00:00+08:00</published><updated>2025-08-04T00:00:00+08:00</updated><id>http://0.0.0.0:4000/default/2025/08/04/Logistics</id><content type="html" xml:base="http://0.0.0.0:4000/default/2025/08/04/Logistics.html"><![CDATA[# Pre-Class Survey (to gather your personal details for certification registration):
https://forms.gle/YEubE8p5Ef1bPxLX7
# Zoom (for screen sharing during exercises):
Zoom ID: 966 696 6699
PSWD:   446688
https://us06web.zoom.us/j/9666966699?pwd=2ZhWEIdyMJTJMFMMtJuZFg63NMhjpD.1&omn=87459833666
# Miro (for the exercises and accessing slides ): 
https://miro.com/app/board/uXjVJXp_mHE=/?share_link_id=140588166663]]></content><author><name>Yuming</name></author><category term="default" /><summary type="html"><![CDATA[Pre-Class Survey (to gather your personal details for certification registration): https://forms.gle/YEubE8p5Ef1bPxLX7 Zoom (for screen sharing during exercises): Zoom ID: 966 696 6699 PSWD: 446688 https://us06web.zoom.us/j/9666966699?pwd=2ZhWEIdyMJTJMFMMtJuZFg63NMhjpD.1&amp;omn=87459833666 Miro (for the exercises and accessing slides ): https://miro.com/app/board/uXjVJXp_mHE=/?share_link_id=140588166663]]></summary></entry><entry><title type="html">PRD Sample</title><link href="http://0.0.0.0:4000/prd/2025/08/04/PrdSample.html" rel="alternate" type="text/html" title="PRD Sample" /><published>2025-08-04T00:00:00+08:00</published><updated>2025-08-04T00:00:00+08:00</updated><id>http://0.0.0.0:4000/prd/2025/08/04/PrdSample</id><content type="html" xml:base="http://0.0.0.0:4000/prd/2025/08/04/PrdSample.html"><![CDATA[# SingaHai Travel Buddy
## 📌 Purpose & Background

The goal of this project is to create an app that helps travelers enjoy a smoother and more fun trip between Singapore and Shanghai. Modern people are too busy to plan, so the app should handle food, lodging, sightseeing, and transport all at once.
The app should feel smart, trendy, and intuitive—like a personal travel soulmate. Expansion to other cities is possible in the future.

## 🧾  First Draft Thoughts

- 	We want to make a travel app that helps people plan their trips, including where to stay and what to eat. Everyone is busy these days, so the app must be easy to use.
- The app should make people want to travel when they open it. Design must feel inspiring. Colors should be bright, youthful but not childish.
- There should be a schedule feature. Users can choose things or we can plan everything for them. So they don’t have to think too much.
- There should be a quiz, like a personality test. Then they know what kind of traveler they are and we can suggest better things.
- Food is very important too. Some people are vegetarian, halal, or don’t eat spicy. Restaurants must be clean, photogenic, and not expensive.
- Hotels should be close to the attractions, or traveling will be tiring. Price should be okay. Photos must look comfortable. Not noisy.
- Must have maps. Otherwise people will get lost. Navigation would be nice. Show distance and time.
- The app should have everything, but not be too complicated. Preferably, everything is on one page. Slide and done.
- The most important thing is that the app feels convenient, modern, fun—like a friend helping you travel.

## 💡  Notes
- I’m not really sure how to write “requirements,” but we just want the app to be good-looking, fun, and useful. Everyone’s excited.
- Fewer buttons are better, but also can’t have too few functions.
- Recommend stuff, but let people change it too. Otherwise they keep asking customer service.
- Oh right, can we add weather? Don’t plan too many outdoor things if it’s raining.
- Maybe some reminders, like “make reservation for tomorrow” or “wake up early for tour.”

---

# SingaHai Travel Buddy
## 📌 目的与背景 
本工程目的是做一款帮助旅客在新加坡和上海自由行时变得更方便的 App。现代人都很忙，没空做功课，所以这个 App 会一次搞定吃住玩交通，让行程变得简单又有趣。	
这款 App 要看起来智慧、时尚、要让人一打开就觉得好用，像是他们的旅游灵魂伴侣。未来也可能拓展到其他城市。	

## 🧾 初步想法 

- 我们想做一个旅游的App，主要是可以帮助大家规划行程，还有住哪里跟吃什么。因为大家都很忙，所以这个App要简单好用。	
- App 要让人一看到就想出国，设计要有感觉，最好色彩明亮，看起来年轻但不要幼稚。	
- 行程要有安排功能，使用者可以点进去选，他也可以自己改，或者全部都帮他排好，这样就不用想。	
- 最好有测验，像做心理测验，这样他们就知道自己适合什么。这样我们也比较好推荐东西给他。	
- 吃的部分也要很重要，不然很多人会不开心。要有吃素的、清真的、还有不能吃辣的。餐厅要乾净好拍照，不要太贵。	
- 住宿的话，地点要近，不然搭车会累。价钱要合理。照片要看起来舒服。也不能太吵。	
- 地图一定要有。不然会迷路。有导航最好，或是能显示距离和时间。	
- 这个App最好什么都有，但又不要太复杂。可以一页看到很多东西。最好是滑一滑就安排好了。	
- 最重要是这个App让人觉得很方便，很新，很有趣，用起来像朋友一样。	

## 💡 备注 
- 我其实也不是很懂怎么写需求啦，不过我们就是希望大家觉得这个App好看、好玩、好用。大家都很期待。	
- 最好设计一点不要太多按钮，但也不能没有功能。	
- 最好可以推荐行程，也让人可以自己改，不然大家都问客服。	
- 啊对了，有没有可能加上天气功能？如果下雨就不要排太多户外。	
- 最好也有一个小提醒功能，例如明天要去的地方要先预约、或早点起床。]]></content><author><name>Yuming</name></author><category term="PRD" /><summary type="html"><![CDATA[SingaHai Travel Buddy 📌 Purpose &amp; Background]]></summary></entry><entry><title type="html">Prompt Pattern1-PRD to Story</title><link href="http://0.0.0.0:4000/prompt/2025/08/04/Prompt-Pattern1-PRD-to-Story.html" rel="alternate" type="text/html" title="Prompt Pattern1-PRD to Story" /><published>2025-08-04T00:00:00+08:00</published><updated>2025-08-04T00:00:00+08:00</updated><id>http://0.0.0.0:4000/prompt/2025/08/04/Prompt%20Pattern1%20-%20PRD%20to%20Story</id><content type="html" xml:base="http://0.0.0.0:4000/prompt/2025/08/04/Prompt-Pattern1-PRD-to-Story.html"><![CDATA[> Sample Prompt

```
## S - Situation（情境）
请阅读以下产品构想，背景为一款旅游类 App，目标是帮助用户轻松规划自由行所需的行程安排、住宿、餐饮与交通，提供智慧、时尚且可定制的旅游体验。

背景内容：
{粘贴完整背景和构想}

---

## P - Purpose（目标）
请将上述构想内容转化为一组符合 INVEST 原则的 User Stories。
- **重点：每条 Story 至少包含 V（Value）与 T（Testable）**
- 你的任务是将产品构想内涵转化为结构化的开发故事条目

---

## A - Action Role（角色指派）
你是一位资深敏捷产品经理，擅长将模糊的构想转化为可执行的 User Story，确保开发团队具备明确目标、价值与验收依据。

---

## R - Rule（任务规则）
请遵循以下行为与风格规范：

要求条目                                              
- 使用标准格式：“作为一名 [角色]，我想要 [目标]，从而 [获益]”  
- 每条 Story 明确表达其价值（V）与可测试性（T）              
- 将模糊、情感化语言（如“好玩”、“有感觉”）转化为行为或功能导向
- 仅输出 User Story 内容，勿生成多余说明                        
- User Story 粒度必须具体、可执行                              
- 覆盖背景构想中提及的所有关键功能或情境                       
---

## K - Knowledge Format（输出格式）
请将结果整理为编号清单格式，每条 Story 使用标准句型书写：

1. 作为一名……，我想要……，从而……
2. 作为一名……，我想要……，从而……

---

## INVEST 原则检查表（附录）

用于回顾每则 Story 的合格性标准（**至少需满足 V 与 T**）：

| 原则代号 | 说明                                 |
| -------- | ------------------------------------ |
| **I – Independent** | Story 应能独立完成，不依赖其他故事             |
| **N – Negotiable**  | 可协商，不应是固定规格说明                     |
| **V – Valuable**    | 对使用者或业务必须具备明确价值                  |
| **E – Estimable**   | 能估算其工作量或复杂度                         |
| **S – Small**       | 足够小，能在一个 Sprint 内完成                |
| **T – Testable**    | 具备可验证的验收标准或条件                    |

 **提示**：虽然不是每条 Story 都需完全符合所有 INVEST 要素，但**必须至少满足 V（Valuable） 与 T（Testable）**。
```]]></content><author><name>Yuming</name></author><category term="Prompt" /><summary type="html"><![CDATA[Sample Prompt]]></summary></entry><entry><title type="html">Prompt Pattern2-Order the Stories</title><link href="http://0.0.0.0:4000/prompt/2025/08/04/Prompt-Pattern2-Order-the-Stories.html" rel="alternate" type="text/html" title="Prompt Pattern2-Order the Stories" /><published>2025-08-04T00:00:00+08:00</published><updated>2025-08-04T00:00:00+08:00</updated><id>http://0.0.0.0:4000/prompt/2025/08/04/Prompt%20Pattern2%20-%20Order%20the%20Stories</id><content type="html" xml:base="http://0.0.0.0:4000/prompt/2025/08/04/Prompt-Pattern2-Order-the-Stories.html"><![CDATA[> Sample Prompt

```
## S - **Situation（情境）**

请阅读以下产品构想与 User Stories。背景为一款旅游类 App，目标是帮助用户轻松规划自由行的行程、住宿、餐饮与交通，提供智慧、时尚且可定制的旅游体验。

你将面对一组已撰写好的 User Stories，接下来的任务是根据其价值与上线优先顺序，进行合理排序。

提供的 User Story 列表如下：

{User Story}


---

## P - **Purpose（目标）**

你的任务是：
**根据使用者价值与 MVP 原则，为上述 User Story 进行排序，并说明排序原因。**

排序判断需兼顾两大目标：

1. **使用者价值（User Value）**：优先满足旅游规划中最核心的痛点，能提升效率、降低焦虑或带来关键帮助。
2. **最小可行产品（MVP）原则**：找出构成 V1.0 的最小功能组合，以便尽早上线验证产品假设。

---

## A - **Action Role（角色指派）**

你是一位**精通敏捷开发与精益创业的产品负责人**，擅长判断功能优先级、拆解上线节奏，并能从用户价值角度快速识别痛点与成长期价值。

---

## R - **Rule（任务规则）**

请遵循以下规范完成排序：

* 每条 User Story 需分配一个明确的排序顺位（1\~N）
* 每条 Story 下方需补充一句**排序原因**

* 例如：「核心痛点」、「需先产生行程资料」、「为次要体验」等
* 若某些功能具备**前置依赖**，请标注依赖说明
* 请指出哪些 User Story 可构成**MVP（V1.0）版本的最小组合**
* 请避免输出多余解释，仅输出排序与理由

---

## K - **Knowledge Format（输出格式）**

请用以下格式进行输出：


1. [User Story 内容]  
排序原因：（例如：核心痛点、用户首要需求、可独立完成）

2. [User Story 内容]  
排序原因：（例如：建立于 Story 1 基础上、为次要体验）

...

15. [User Story 内容]  
排序原因：（例如：依赖其他模组、非必要功能）

---
最小可行版本（MVP）包含：第 1～5 项功能
---


```]]></content><author><name>Yuming</name></author><category term="Prompt" /><summary type="html"><![CDATA[Sample Prompt]]></summary></entry><entry><title type="html">Prompt Pattern3-Story to AC</title><link href="http://0.0.0.0:4000/prompt/2025/08/04/Prompt-Pattern3-Story-to-AC.html" rel="alternate" type="text/html" title="Prompt Pattern3-Story to AC" /><published>2025-08-04T00:00:00+08:00</published><updated>2025-08-04T00:00:00+08:00</updated><id>http://0.0.0.0:4000/prompt/2025/08/04/Prompt%20Pattern3%20-%20Story%20to%20AC</id><content type="html" xml:base="http://0.0.0.0:4000/prompt/2025/08/04/Prompt-Pattern3-Story-to-AC.html"><![CDATA[> Sample Prompt

```
##  S - **Situation（情境）**

请阅读以下 User Story。本任务背景为一款旅游类 App，旨在帮助用户轻松规划自由行中的行程、住宿、餐饮与交通，并提供可自定义的智慧化体验。

你将基于这些 User Story，为产品开发团队撰写结构化的验收标准，用于明确开发完成的判断标准，并协助测试验证功能是否可交付。

提供的 User Story 如下：


{粘贴完整 User Story，可多个}


---

##  P - **Purpose（目标）**

请为上述每条 User Story 撰写详细的 **验收标准（Acceptance Criteria）**。
重点在于清楚定义「在什么情况下该需求可被视为完成且可接受」，并聚焦**使用者行为与系统回应**。

每个 User Story 至少列出 **3 种情境**，涵盖：

*  正常流程（Happy Path）
*  边界情境（如空值、极限输入）
*  异常情境（如权限不足、格式错误）

---

##  A - **Action Role（角色指派）**

你是一位**熟悉业务需求与用户旅程的资深产品经理**，擅长用非技术语言清楚描述系统行为，确保团队对功能完成标准有一致理解。

---

##  R - **Rule（任务规则）**

请遵循以下规范进行撰写：

* 使用 **Given-When-Then**（Gherkin）格式表达每个验收情境
* 语言请保持 **商业用语，避免技术术语**
* 每个场景标题请以「场景：」开头，简要描述该情境
* 若 Story 涉及以下情境，请优先考虑：

  *  权限控制（是否已登录、是否有操作权限）
  *  跨装置或浏览器差异（手机 / 桌机、iOS / Android）

---

##  K - **Knowledge Format（输出格式）**

请用以下格式撰写，每个场景为一个区块：

gherkin
场景：简要说明情境名称  
Given 某些前置条件成立  
And 某些系统状态存在（如有）  
When 使用者执行某个动作  
And （额外操作或输入）  
Then 系统应有的回应  
And （额外验证点或状态变更）


每条 User Story 至少撰写三组情境。请确保内容**具体、可验证、贴近使用者语言**。
```]]></content><author><name>Yuming</name></author><category term="Prompt" /><summary type="html"><![CDATA[Sample Prompt]]></summary></entry><entry><title type="html">SPARK提示词模型培训课程</title><link href="http://0.0.0.0:4000/training/2025/08/04/SPARK-Training-Course.html" rel="alternate" type="text/html" title="SPARK提示词模型培训课程" /><published>2025-08-04T00:00:00+08:00</published><updated>2025-08-04T00:00:00+08:00</updated><id>http://0.0.0.0:4000/training/2025/08/04/SPARK-Training-Course</id><content type="html" xml:base="http://0.0.0.0:4000/training/2025/08/04/SPARK-Training-Course.html"><![CDATA[# SPARK提示词模型培训课程

---

## 课程资料下载


> **PRD Sample文件**：[下载PRD Sample](https://docs.google.com/document/d/1mbkW4OP3bsjIzx0cH-OxifRixYsiTBVX7oXAI59BZaQ/export?format=docx){:download="PRD-Sample.docx"} - 本培训课程使用的示例产品需求文档

---

## 课程概述

本培训课程将系统性地介绍SPARK提示词模型，通过三个循序渐进的步骤，帮助您掌握如何编写高效、结构化的AI提示词。

### SPARK模型核心要素

| 要素 | 功能 | 说明 |
|------|------|------|
| **S - Situation（情境）** | 提供背景与脉络 | 建立AI的问题空间与语境 |
| **P - Purpose（目标）** | 明确任务产出目标 | 让AI聚焦输出内容 |
| **A - Action Role（角色指派）** | 设定专业角色 | 模拟贴近实际业务需求的思维方式 |
| **R - Rule（任务规则）** | 制定行为与风格规范 | 确保产出内容的一致性、专业性与实用性 |
| **K - Knowledge Format（输出格式）** | 定义产出格式 | 帮助模型维持输出一致性 |

---

## 第一步：PRD转User Story - 需求转化技能

> **相关案例**：[Prompt Pattern1-PRD to Story]({{ site.baseurl }}/prompt/2025/08/04/Prompt-pattern1-PRD-to-Story.html)

### 教学要点

#### 1. 情境设定（S）的重要性

**功能**：建立AI的问题空间与语境

**撰写技巧**：
- 使用真实项目语言描述问题
- 采用"产品目的+用户痛点+解决方式"三段式结构
- 避免混入任务指令

**示例特点**：旅游App背景，完整的产品构想描述

---

#### 2. 目标明确化（P）的技巧

**功能**：让AI聚焦输出内容

**撰写技巧**：
- 用一句话概括任务目标
- 加入重点要求说明（如INVEST原则）
- 使用动词导向的指令

**示例特点**：明确要求转化为User Story，强调V和T原则

---

#### 3. 角色设定（A）的专业性

**功能**：模拟贴近实际业务需求的思维方式

**撰写技巧**：
- 指定具备任务相关技能的专业角色
- 强调该角色的擅长领域

**示例特点**：资深敏捷产品经理，擅长转化构想

---

#### 4. 规则制定（R）的精确性

**功能**：确保产出内容的一致性、专业性与实用性

**撰写技巧**：
- 使用清单方式列出具体行为要求
- 涵盖内容范围、语言转化、输出边界
- 避免模糊词汇，转化为行为指令

**示例特点**：明确User Story格式、INVEST原则要求

---

#### 5. 格式定义（K）的规范性

**功能**：帮助模型维持输出一致性

**撰写技巧**：
- 明确使用编号清单格式
- 提供范例句型
- 注明句型模板

**示例特点**：标准User Story格式："作为一名[角色]，我想要[目标]，从而[获益]"

---

### SPARK特别用法

| 区块 | 特别技巧 | 说明 |
|------|----------|------|
| **S区块** | 变量占位符技巧 | 使用`{粘贴完整背景和构想}`作为占位符，让用户动态填充具体内容，提高模板复用性 |
| **P区块** | INVEST原则嵌入 | 在目标中明确要求"每条Story至少包含V（Value）与T（Testable）"，将质量检查标准直接融入目标设定 |
| **R区块** | 模糊语言转化 | 明确要求"避免模糊语句，如「请尽量清楚描述」→ 改为「每条User Story至少提供3种场景」"，将抽象要求转化为具体行为指令 |

---

## 第二步：User Story排序 - 优先级判断技能

> **相关案例**：[Prompt Pattern2-Order the Stories]({{ site.baseurl }}/prompt/2025/08/04/Prompt-Pattern2-Order-the-Stories.html)

### 教学要点

#### 1. 情境设定（S）的输入导向

**功能**：设定任务背景与输入内容

**撰写技巧**：
- 提供简明的产品构想
- 明确指出面对的输入内容
- 用使用者语言写实表达

**示例特点**：明确说明将面对一组已撰写好的User Stories

---

#### 2. 目标设定（P）的双重导向

**功能**：兼顾使用者价值与MVP原则

**撰写技巧**：
- 明确排序任务
- 说明排序依据（价值、依赖、最小上线单元）
- 避免模糊词汇，转化为可操作标准

**示例特点**：兼顾使用者价值与MVP原则，要求说明排序原因

---

#### 3. 角色设定（A）的判断能力

**功能**：影响语言逻辑与判断标准

**撰写技巧**：
- 指定具备判断能力的专业角色
- 加入专业背景说明

**示例特点**：精通敏捷开发与精益创业的产品负责人

---

#### 4. 规则制定（R）的结构化要求

**功能**：确保产出结构稳定、内容精准

**撰写技巧**：
- 使用清单呈现任务规范
- 明确各部分结构要求
- 避免模糊规则

**示例特点**：要求分配排序顺位、补充排序原因、标注依赖关系

---

#### 5. 格式定义（K）的实用性

**功能**：确保格式一致、便于使用

**撰写技巧**：
- 指明使用编号清单格式
- 说明格式顺序（内容+原因+备注）
- 提供范例输出格式

**示例特点**：明确排序格式，包含MVP组合说明

---

### SPARK特别用法

| 区块 | 特别技巧 | 说明 |
|------|----------|------|
| **S区块** | 双重输入设计 | 先提供产品背景，再明确输入内容"你将面对一组已撰写好的User Stories"，让AI清楚知道要处理什么 |
| **P区块** | 双重目标设定 | 同时要求"使用者价值"和"MVP原则"，在目标层面就建立平衡机制 |
| **K区块** | MVP组合输出 | 在格式要求中明确"请指出哪些User Story可构成MVP（V1.0）版本的最小组合"，将决策结果直接纳入输出格式 |

---

## 第三步：User Story转验收标准 - 测试设计技能

> **相关案例**：[Prompt Pattern3-Story to AC]({{ site.baseurl }}/prompt/2025/08/04/Prompt-Pattern3-Story-to-AC.html)

### 教学要点

#### 1. 情境设定（S）的测试导向

**功能**：帮助模型理解任务背景与输入内容

**撰写技巧**：
- 提供清楚的背景介绍
- 明确指出要撰写的User Story
- 避免在此区块放入任务指令

**示例特点**：明确说明为产品开发团队撰写验收标准

---

#### 2. 目标设定（P）的验证导向

**功能**：说明要交付什么、为什么写

**撰写技巧**：
- 明确写出撰写验收标准的目的
- 指出重点要求（如Gherkin格式、多种情境）
- 强调商业目的

**示例特点**：要求至少列出3种情境，涵盖正常、边界、异常流程

---

#### 3. 角色设定（A）的业务导向

**功能**：提升内容专业性与语气匹配度

**撰写技巧**：
- 指派能写验收标准的角色
- 说明该角色的专长与视角
- 避免设定开发者或AI助理角色

**示例特点**：熟悉业务需求与用户旅程的资深产品经理

---

#### 4. 规则制定（R）的测试导向

**功能**：约定输出规则，让结果更稳定与可操作

**撰写技巧**：
- 指定使用Gherkin语法
- 明确语言风格要求
- 要求多种场景类型

**示例特点**：使用Given-When-Then格式，保持商业用语

---

#### 5. 格式定义（K）的结构化

**功能**：清楚定义输出形式，利于阅读、复制、沟通

**撰写技巧**：
- 指定使用区块格式
- 提供格式范例
- 要求使用者语言自然

**示例特点**：每个场景一个Gherkin结构，便于测试用例生成

---

### SPARK特别用法

| 区块 | 特别技巧 | 说明 |
|------|----------|------|
| **S区块** | 测试导向设计 | 明确说明"为产品开发团队撰写结构化的验收标准"，在情境中就定位了输出用途 |
| **P区块** | 量化要求嵌入 | 在目标中明确"每个User Story至少列出3种情境"，将数量要求直接融入目标设定 |
| **R区块** | Gherkin格式强制 | 明确要求"使用Given-When-Then（Gherkin）格式"，将测试标准格式直接写入规则 |
| **K区块** | 测试用例结构 | 提供完整的Gherkin格式范例，确保输出可直接用于测试用例生成 |

---

## 提示词写作核心技巧

### 1. SPARK模型写作要领

#### S区块（情境）的写作技巧
- **变量占位符策略**：使用`{粘贴完整背景}`、`{User Story}`等占位符，让提示词可重复使用
- **双层背景设计**：先描述产品背景，再说明输入内容类型，让AI清楚知道要处理什么
- **用途明确化**：在情境中就说明输出的用途，如"为产品开发团队撰写验收标准"

#### P区块（目标）的写作技巧
- **质量标准嵌入**：将检查标准直接写入目标，如"每条Story至少包含V（Value）与T（Testable）"
- **量化要求明确**：用具体数字替代模糊描述，如"至少列出3种情境"而非"列出多种情境"
- **双重目标平衡**：当任务复杂时，明确列出需要兼顾的多个目标，如"使用者价值"和"MVP原则"

#### A区块（角色）的写作技巧
- **技能匹配原则**：根据任务选择最合适的角色，产品任务选"产品经理"，测试任务选"QA专家"
- **专业背景描述**：详细说明角色的专业领域，如"精通敏捷开发与精益创业的产品负责人"
- **业务导向优先**：对于商业任务，避免技术角色，确保输出贴近业务语言

#### R区块（规则）的写作技巧
- **模糊语言转化**：将"请尽量清楚"改为"每条Story必须包含具体的验收条件"
- **格式标准强制**：明确指定格式要求，如"使用Given-When-Then（Gherkin）格式"
- **正反面指导**：同时说明"必须做什么"和"避免做什么"，如"使用商业用语，避免技术术语"

#### K区块（格式）的写作技巧
- **完整范例提供**：给出完整的输出格式示例，让AI可以直接模仿
- **结构化输出设计**：将决策结果纳入格式要求，如"请指出哪些Story构成MVP"
- **可用性考量**：确保输出格式便于后续使用，如直接可复制到测试用例或项目管理工具

### 2. 提示词写作常见问题与解决技巧

#### 问题：AI输出格式每次都不一样
**SPARK解决策略**：
- **K区块范例化**：提供完整的格式示例，包含所有必要元素
- **R区块格式强制**：在规则中明确"严格按照以下格式输出"
- **代码块技巧**：使用```代码块包围格式示例，提高AI的格式识别准确性

#### 问题：AI回答太技术化，业务人员看不懂
**SPARK解决策略**：
- **A区块业务角色**：设定"资深产品经理"而非"系统架构师"
- **R区块语言规范**：明确要求"使用商业语言，避免技术术语"
- **S区块业务背景**：在情境中强调业务目标和用户价值

#### 问题：AI输出内容不够完整
**SPARK解决策略**：
- **P区块量化明确**：用具体数字要求，如"每个User Story需要3种测试场景"
- **R区块要素清单**：列出必须包含的所有要素，如"排序原因、依赖关系、MVP标记"
- **检查清单技巧**：在提示词最后加入"请确认以上要求都已满足"

### 3. 高级提示词写作技巧

#### 模板化与复用策略
- **变量占位符设计**：使用`{}`标记需要动态填充的内容
- **模块化组合**：将SPARK各区块设计成可组合的模块
- **版本迭代记录**：记录不同版本的提示词效果，持续优化

#### 上下文控制技巧
- **信息层次化**：在S区块中按重要性排列背景信息
- **输入格式标准化**：为不同类型输入设计标准格式
- **边界条件处理**：在R区块中说明如何处理特殊情况

#### 输出质量控制
- **多轮验证设计**：设计可以多轮精化的提示词结构
- **质量检查嵌入**：将质量标准直接写入提示词各区块
- **反馈循环建立**：设计便于根据输出结果调整提示词的机制

---

## 总结

SPARK模型提供了一个系统性的框架来编写高效的AI提示词。通过这三个步骤的培训，您将掌握：

1. **需求转化技能**：将产品构想转化为可执行的User Story
2. **优先级判断技能**：基于价值和MVP原则进行功能排序
3. **测试设计技能**：为User Story制定详细的验收标准

每个步骤都体现了SPARK模型的核心要素，通过结构化的教学要点和实用技巧，帮助您在实际工作中更好地运用AI工具。]]></content><author><name>Yuming</name></author><category term="Training" /><summary type="html"><![CDATA[SPARK提示词模型培训课程]]></summary></entry></feed>